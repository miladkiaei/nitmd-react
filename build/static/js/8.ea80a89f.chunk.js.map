{"version":3,"sources":["bg.jpg","logo.jpg","Search/Search.js"],"names":["module","exports","Copyright","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","card","minWidth","position","bullet","transform","title","fontSize","pos","marginBottom","wrapper","background","Background","backgroundSize","overflow","height","logo","boxShadow","border","borderRadius","fab","closeButton","right","top","addIcon","bottom","Search","useState","open","setOpen","options","setOptions","query","setQuery","loading","setLoading","selectedPhrase","setSelectedPhrase","useEffect","console","log","process","axios","get","params","then","resp","data","onSubmit","useCallback","event","preventDefault","classes","className","component","maxWidth","src","require","alt","noValidate","container","item","xs","id","onOpen","onClose","onChange","value","getOptionLabel","option","name","filterOptions","inputValue","renderOption","style","meaning","meaning_fa","renderInput","label","fullWidth","target","InputProps","endAdornment","Fragment","size","aria-label","onClick","segments","map","segment","key","content","description","fontStyle","example","mt"],"mappings":"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","file":"static/js/8.ea80a89f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.bd10c03d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.19a8c07d.jpg\";","import React, {useCallback, useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport axios from 'axios';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Background from \"../bg.jpg\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport StarIcon from '@material-ui/icons/Star';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport ShareIcon from '@material-ui/icons/Share';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        minWidth: 275,\n        position: 'relative'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    wrapper: {\n        background: `url(${Background}) no-repeat`,\n        backgroundSize: 'cover',\n        overflow: 'hidden',\n        height: '100vh',\n        width: '100vw',\n    },\n    logo: {\n        width: '30%',\n        height: 'auto',\n        boxShadow: '0 0 10px -1px #969696',\n        marginBottom: '25px',\n        border: '3px solid white',\n        borderRadius: '8px'\n    },\n    fab: {\n        margin: '0 10px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: '10px',\n        top: '10px',\n    },\n    addIcon: {\n        position: 'absolute',\n        bottom: '20px',\n        right: '20px',\n    },\n}));\n\n\nexport default function Search() {\n    const [open, setOpen] = useState(false);\n    const [options, setOptions] = useState([]);\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [selectedPhrase, setSelectedPhrase] = useState(null);\n    // const loading = open && options.length === 0;\n\n\n\n    useEffect(() => {\n        console.log('aaaaaaaa');\n        setOptions([]);\n\n\n        if (query) {\n            setLoading(true);\n            console.log('processsssss', process.env.REACT_APP_API_BASE_URL);\n            axios.get(process.env.REACT_APP_API_BASE_URL + '/api/dictionary/search', {\n                params: {\n                    query: query\n                }\n            }).then((resp) => {\n                console.log(resp);\n                setOptions(resp.data);\n                setLoading(false);\n            });\n        }\n\n\n        return () => {\n            setLoading(false);\n        };\n    }, [query]);\n\n\n    const onSubmit = useCallback((event) => {\n        event.preventDefault();\n    }, []);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (!open) {\n            setOptions([]);\n        }\n    }, [open]);\n\n    const filterOptions = (options, { inputValue }) => options;\n    return (\n        <div className={classes.wrapper}>\n            <Container component=\"main\" maxWidth=\"md\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <img src={require('../logo.jpg')} alt=\"logo\" className={classes.logo} />\n                    <form className={classes.form} noValidate onSubmit={onSubmit}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Autocomplete\n                                    id=\"query\"\n                                    open={open}\n                                    onOpen={() => {\n                                        setOpen(true);\n                                    }}\n                                    onClose={() => {\n                                        setOpen(false);\n                                    }}\n                                    onChange={(event, value) => {\n                                        setSelectedPhrase(value);\n                                        console.log('on Changeeeeeee', value);\n                                    }}\n                                    getOptionLabel={option => option.name}\n                                    options={options}\n                                    loading={loading}\n                                    filterOptions={filterOptions}\n                                    renderOption={(option) => {return <span>{option.name} <span style={{color: \"gray\"}}>({option.meaning})</span> / <span style={{color: \"gray\"}}>({option.meaning_fa})</span></span>}}\n                                    renderInput={params => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Search anything...\"\n                                            value={query}\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            onChange={(event) => {console.log('changeddddddd'); setQuery(event.target.value)}}\n                                            InputProps={{\n                                                ...params.InputProps,\n                                                endAdornment: (\n                                                    <React.Fragment>\n                                                        {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                                        {params.InputProps.endAdornment}\n                                                    </React.Fragment>\n                                                ),\n                                            }}\n                                        />\n                                    )}\n                                />\n                                {selectedPhrase &&\n                                <Card className={classes.card}>\n                                    <br/>\n                                    <CardContent>\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" className={classes.closeButton}\n                                        onClick={() => {\n                                            setSelectedPhrase(null);\n                                        }}>\n                                            <CloseIcon />\n                                        </IconButton>\n\n                                        <Typography variant=\"h4\" component=\"h2\">\n                                            {selectedPhrase.name}\n                                        </Typography>\n                                        <Typography color=\"textSecondary\">\n                                            <br/>\n                                            {selectedPhrase.segments.map(segment => {\n                                                return <span key={segment.id}>\n                                                    {' {'}\n                                                        {segment.content}\n                                                        <span style={{fontSize: 'smaller', color: '#c9c9c9'}}>\n                                                            {' (' + segment.description + ')'}\n                                                        </span>\n                                                    {'} '}\n                                                </span>;\n                                            })}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\" style={{fontSize: 'small', fontStyle: 'italic'}}>\n                                            <br/>\n                                            Example: {selectedPhrase.example}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            <br/>\n                                            {selectedPhrase.meaning}\n                                            <br/>\n                                            <br/>\n                                            {selectedPhrase.meaning_fa}\n                                            <br/>\n                                            <br/>\n                                        </Typography>\n                                        <Tooltip title=\"Suggest an edit\">\n                                            <Fab aria-label=\"edit\" className={classes.fab}>\n                                                <EditIcon />\n                                            </Fab>\n                                        </Tooltip>\n                                        <Tooltip title=\"Share the word\">\n                                            <Fab aria-label=\"share\" className={classes.fab}>\n                                                <ShareIcon />\n                                            </Fab>\n                                        </Tooltip>\n                                        <Tooltip title=\"Add to favourites\">\n                                            <Fab aria-label=\"favorite\" className={classes.fab}>\n                                                <StarIcon color=\"primary\"/>\n                                            </Fab>\n                                        </Tooltip>\n\n                                    </CardContent>\n                                </Card>\n                                }\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright />\n                </Box>\n                <Tooltip title=\"Suggest a new word\">\n                    <Fab aria-label=\"edit\" className={classes.addIcon}>\n                        <AddIcon />\n                    </Fab>\n                </Tooltip>\n            </Container>\n        </div>\n    );\n}"],"sourceRoot":""}